[metadata]
name = hello_python
description = "hello python package"
long_description = file: readme.org
version = attr: hello_python.__VERSION__
author = Hello Python
author_email = hello@hello.com
url = https://update-me.com
license = MIT
license_files = LICENSE.txt

[options]
install_requires =
    urllib3
    pyyaml
    urllib3>=1.2

# automatically find all your packages in the subdirectory
packages = find:
include_package_data = True

[options.entry_points]
console_scripts =
    hello-python = hello_python.simple:main
    hello-cmd    = hello_python.cmd.simple:main

[options.packages.find]
exclude =
    tests

# example: pip install packageName[option]
[options.extras_require]
dev =
    docutils>=0.14
    s3transfer>=0.1.10
test =
    pytest
    coverage
    mock
    nose
    pycodestyle
    pyflakes

# this will include .yaml files when the package's installed note the yaml files
# need to be under the package directory during the build
# to test if the data is included after the package is installed:
#
# import importlib.resources
# list(importlib.resources.contents('hello_python'))
[options.package_data]
# include any yaml files found in any package
* = *.yaml

# If a package data file is located in a directory that does not have an
# __init__.py file (say, a data/ directory inside package.subpackage), that
# directory does not count as a package, and the file must be listed in
# package_data in the form "package.subpackage": ["data/PATTERN"].
hello_python = data/*.svg
